name: "EK Aligo"
description: "Action for checking Golang struct alignment"
author: "ESSENTIALKAOS"

branding:
  icon: 'align-left'
  color: 'white'

inputs:
  files:
    description: "Files or directories to check"
    required: true

  path:
    description: "Path to directory with sources"
    required: false

  tags:
    description: "Build tags"
    required: false

  version:
    description: "Version of Aligo"
    required: false
    default: "2.0.2"

runs:
  using: "composite"
  steps:
    - id: aligo-validate-options
      name: Options validation
      shell: bash
      run: |
        # [aligo-validate-options]

        if [[ -n "${{inputs.path}}" && ! -d "${{inputs.path}}" ]] ; then
          echo "::error::Directory ${{inputs.path}} doesn't exist"
          exit 1
        fi

    - id: aligo-install
      name: Install Aligo
      shell: bash
      run: |
        # [aligo-install]

        echo -e "::group::\033[34mBuilding Aligo…\033[0m"

        version=${{inputs.version}}

        if [[ "$version" != "latest" ]] ; then
          version="v$version"
        fi

        if ! go install github.com/essentialkaos/aligo@$version ; then
          echo "::endgroup::"
          echo "::error::Can't install aligo (version: $version)"
          exit 1
        fi

        mkdir -p ~/.cache
        cp "$(which aligo)" ~/.cache/aligo

        echo "::endgroup::"

    - id: aligo-version-print
      name: Print Aligo version info
      shell: bash
      run: |
        # [aligo-version-print]

        echo -e "::group::\033[34mPrint Aligo version…\033[0m"
        ~/.cache/aligo --version
        echo "::endgroup::"

    - id: aligo-check
      name: Check Golang sources with Aligo
      shell: bash
      run: |
        # [aligo-check]

        echo -e "\033[34mRunning Aligo…\033[0m"

        if [[ -n "${{inputs.path}}" ]] ; then
          cd ${{inputs.path}}
        fi

        if [[ -n "${{inputs.tags}}" ]] ; then
          ~/.cache/aligo --tags "$tags" check ${{inputs.files}}
        else
          ~/.cache/aligo check ${{inputs.files}}
        fi
